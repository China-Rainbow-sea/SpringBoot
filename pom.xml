<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.rainbowsea</groupId>
    <artifactId>quickstart</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>demo01</module>
    </modules>


    <!--    导入SpringBoot 父工程-规定写法-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.3</version>
    </parent>

    <!--自定义设置2：通过 properties 也是可以指定mysql.version的版本设置的-->
    <properties>
        <mysql.version>5.1.49</mysql.version>
    </properties>

    <!--    导入web项目场景启动器：会自动导入和web开发相关的jar包所有依赖【库/jar】-->
    <!--    后面还会在说明spring-boot-starter-web 到底引入哪些相关依赖-->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!--
                我们自己指定mysql/驱动版本，修改版本仲裁
                1.方式1： 显示导入mysql依赖，并明确指定<version>
                2.方式2： 在自己的pom.xml文件中，在<properties> 中指定的mysql的 key
                例如:

                         <properties>
                            <mysql.version>5.1.49</mysql.version>
                         </properties>


               3. 为什么可以达到修改版本仲裁：根据依赖：就近原则
        -->


        <!--      自定义设置：1  我们自己指定mysql/驱动版本-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <!--            <version>5.1.37</version>,不指明就是，采用SpringBoot 约定好的(也就是默认的8.26)-->
        </dependency>


        <!--        解决  @ConfigurationProperties(prefix = "furn01") 提示信息,  在 pom.xml  增加依赖,  即可
        Spring Boot Configuration Annotation Processor not configured 提示信息
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <!--  这里配置 optional 为 true
             说明：表示防止将此依赖传递到其它模块，同时不加入 war 包当中，因为这个依赖仅仅是为了
             我们编写代码的时候比较方便，但是实际发布的项目当中是不需要这个的。所以剔除掉它。
            -->
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>

    </dependencies>


</project>